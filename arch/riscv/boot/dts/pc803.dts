/dts-v1/;
/ {
    #address-cells = <2>;
    #size-cells = <2>;

    aliases {
        uart0 = "/serial@8212000";
        uart1 = "/serial@8210000";
        uart2 = "/serial@8214000";
    };

    chosen {
        bootargs = "console=ttyS0,115200n8 earlycon=sbi";
        stdout-path = "uart0:115200n8";
    };

    per_clk: per_clk {
        #clock-cells = <0>;
        compatible = "fixed-clock";
        clock-frequency = <325000000>;
    };

    cpus {
        #address-cells = <1>;
        #size-cells = <0>;
        timebase-frequency = <30720000>;

        cpu0: cpu@0 {
            device_type = "cpu";
            compatible = "riscv";
            clock-frequency = <998400000>;
            riscv,priv-major = <0x1>;
            riscv,priv-minor = <0xa>;
            i-cache-size = <0x8000>;
            i-cache-line-size = <0x20>;
            i-cache-sets = <0x80>;
            d-cache-size = <0x8000>;
            d-cache-line-size = <0x20>;
            d-cache-sets = <0x80>;
            mmu-type = "riscv,sv64";
            reg = <0>;
            riscv,isa = "rv64imafdc";
            status = "okay";
            cpu0_intc: interrupt-controller {
                #interrupt-cells = <1>;
                compatible = "riscv,cpu-intc";
                interrupt-controller;
            };
        };

        cpu1: cpu@1 {
            device_type = "cpu";
            compatible = "riscv";
            clock-frequency = <998400000>;
            riscv,priv-major = <0x1>;
            riscv,priv-minor = <0xa>;
            i-cache-size = <0x8000>;
            i-cache-line-size = <0x20>;
            i-cache-sets = <0x80>;
            d-cache-size = <0x8000>;
            d-cache-line-size = <0x20>;
            d-cache-sets = <0x80>;
            mmu-type = "riscv,sv64";
            reg = <1>;
            riscv,isa = "rv64imafdc";
            status = "okay";
            cpu1_intc: interrupt-controller {
                #interrupt-cells = <1>;
                compatible = "riscv,cpu-intc";
                interrupt-controller;
            };
        };

    };

    memory@80000000 {
        /* ddr 256M */
        device_type = "memory";
        reg = <0x0 0x80000000 0x0 0x10000000>;
    };


    plic0: interrupt-controller@C800000 {
        #interrupt-cells = <1>;
        compatible = "riscv,plic0";
        interrupt-controller;
        riscv,ndev = <152>;
        interrupts-extended = <
            &cpu0_intc 11 &cpu0_intc 9
            &cpu1_intc 11 &cpu0_intc 9 >;
        reg = <0xC800000 0x400000>;
    };

    plmt0@C400000 {
        compatible = "riscv,plmt0";
        reg = <0x0 0xC400000 0x0 0x100000>;
        interrupts-extended = <&cpu0_intc 0x7 &cpu1_intc 0x7>;
    };

    serial@8212000 {
        compatible = "snps,dw-apb-uart";
        reg = <0x0 0x8212000 0x0 0x100>;
        clocks = <&per_clk>;
        clock-names = "baudclk";
        interrupts = <70>;
        reg-shift = <2>;
        reg-io-width = <4>;
        interrupt-parent = <&plic0>;
    };

    serial@8210000 {
        compatible = "snps,dw-apb-uaethernet@10090000rt";
        reg = <0x0 0x8210000 0x0 0x100>;
        clocks = <&per_clk>;
        clock-names = "baudclk";
        interrupts = <71>;
        reg-shift = <2>;
        reg-io-width = <4>;
        interrupt-parent = <&plic0>;
    };

    serial@8214000 {
        compatible = "snps,dw-apb-uart";
        reg = <0x0 0x8214000 0x0 0x100>;
        clocks = <&per_clk>;
        clock-names = "baudclk";
        interrupts = <72>;
        reg-shift = <2>;
        reg-io-width = <4>;
        interrupt-parent = <&plic0>;
    };

    ethernet@08480000 {
        compatible = "cdns,macb";
        interrupt-parent = <&plic0>;
        interrupts = <6>;
        reg = <0x0 0x08480000 0x0 0x2000>;
        reg-names = "control";
        local-mac-address = [70 b3 d5 92 f0 4a];
        phy-mode = "gmii";
        clocks = <&per_clk>, <&per_clk>;
        clock-names = "hclk", "pclk";
        #address-cells = <0x01>;
        #size-cells = <0x00>;

        ethernet-phy@0 {
            reg = <0x00>;
            //TODO add a reset GPIO
        };
    };

};
